<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.richfit.mes.produce.dao.LineStoreMapper">
    <select id="selectGroup" resultType="com.richfit.mes.common.model.produce.store.LineStoreSum">
        SELECT c.drawing_no,
               (select s.product_name
                from mes_produce.produce_line_store s
                where s.drawing_no = c.drawing_no
                  and tenant_id = c.tenant_id
                  and branch_code =
                      c.branch_code limit 1) material_name,
        (select s.material_no from
        mes_produce.produce_line_store s where s.drawing_no = c.drawing_no and tenant_id = c.tenant_id and branch_code =
        c.branch_code limit 1) material_no,
        (
        SELECT sum(number - ifnull(use_num,0)) FROM mes_produce.produce_line_store
        where drawing_no = c.drawing_no and material_type = '0' and status ='0' and tenant_id = c.tenant_id and
        branch_code = c.branch_code
        ) number,
        (
        SELECT sum(number) FROM mes_produce.produce_line_store
        where drawing_no = c.drawing_no and material_type = '1' and status = '1' and tenant_id = c.tenant_id and
        branch_code
        = c.branch_code
        ) making_number,
        (
        SELECT sum(number - ifnull(use_num,0)) FROM mes_produce.produce_line_store
        where drawing_no = c.drawing_no and material_type = '1' and status = '0' and tenant_id = c.tenant_id and
        branch_code
        = c.branch_code
        ) comp_number

        from (
            select distinct (drawing_no) drawing_no, tenant_id, branch_code FROM mes_produce.produce_line_store
            ${ew.customSqlSegment}
            ) c

    </select>
    <select id="selectLineStoreByProduce" resultType="com.richfit.mes.common.model.produce.LineStore">
        SELECT ls.*, ta.id assemblyId
        FROM produce_line_store ls
                 left join mes_produce.produce_track_assembly ta
                           on ls.workblank_no = ta.product_no and ls.track_type = '0'
            ${ew.customSqlSegment}
    </select>

    <!-- 查询装配库存 库存量-->
    <select id="selectStoreNumForAssembly" resultType="com.richfit.mes.common.model.produce.store.LineStoreSumZp">
        select c.drawing_no,
        max(c.product_name) product_name,
        max(c.material_no) material_no,
        sum(ifnull(c.number,0) - ifnull(c.use_num,0))store_number
        from (
        select * from mes_produce.produce_line_store
        where tenant_id = #{param.tenantId} and branch_code = #{param.branchCode} and material_type='1'
        <trim suffixOverrides=",">
            <if test="param.drawingNo != null and param.drawingNo != ''">
                and drawing_no like CONCAT('%',#{param.drawingNo},'%')
            </if>
            <if test="param.materialNo != null and param.materialNo != ''">
                and material_no like CONCAT('%',#{param.materialNo},'%')
            </if>
        </trim>
        ) c
        group by c.drawing_no
    </select>

    <!-- 查询装配库存  配送接收量-->
    <select id="selectDeliveryNumber" resultType="com.richfit.mes.common.model.produce.store.LineStoreSumZp">
        select drawing_no,sum(ifnull(number,0)) delivery_number
        from mes_produce.produce_line_store
        where input_type ='3'
        and material_type = '1'
        -- and status='0'
        and tenant_id = #{param.tenantId} and branch_code = #{param.branchCode}
        <trim suffixOverrides=",">
            <if test="param.drawingNo != null and param.drawingNo != ''">
                and drawing_no like CONCAT('%',#{param.drawingNo},'%')
            </if>
            <if test="param.materialNo != null and param.materialNo != ''">
                and material_no like CONCAT('%',#{param.materialNo},'%')
            </if>
        </trim>
        group by drawing_no
    </select>

    <!-- 查询装配库存 全部需求量-->
    <select id="selectRequireNum" resultType="com.richfit.mes.common.model.produce.store.LineStoreSumZp">
        <!--        select cc.drawing_no,sum(cc.compsum) as require_number-->
        <!--        from (-->
        <!--        select c.drawing_no,c.`number` * a.bomsum as compsum from (-->
        <!--        select sum(1) as bomsum,drawing_no from-->
        <!--        produce_track_head-->
        <!--        where tenant_id = #{param.tenantId} and branch_code = #{param.branchCode}-->
        <!--        <trim suffixOverrides=",">-->
        <!--            <if test="param.drawingNo != null and param.drawingNo != ''">-->
        <!--                and drawing_no like CONCAT('%',#{param.drawingNo},'%')-->
        <!--            </if>-->
        <!--            <if test="param.materialNo != null and param.materialNo != ''">-->
        <!--                and material_no like CONCAT('%',#{param.materialNo},'%')-->
        <!--            </if>-->
        <!--        </trim>-->
        <!--        group by drawing_No-->
        <!--        ) a,-->
        <!--        produce_project_bom c where c.main_drawing_no=a.drawing_no-->
        <!--        ) cc-->
        <!--        group by cc.drawing_no-->

        select sum(ifnull(number,0)) as require_number,drawing_no from
        produce_track_assembly
        where tenant_id = #{param.tenantId} and branch_code = #{param.branchCode}
        <trim suffixOverrides=",">
            <if test="param.drawingNo != null and param.drawingNo != ''">
                and drawing_no like CONCAT('%',#{param.drawingNo},'%')
            </if>
            <if test="param.materialNo != null and param.materialNo != ''">
                and material_no like CONCAT('%',#{param.materialNo},'%')
            </if>
        </trim>
        group by drawing_No
    </select>


    <!-- 查询装配库存 跟单已装量-->
    <select id="selectAssemblyNum" resultType="com.richfit.mes.common.model.produce.store.LineStoreSumZp">
        select drawing_no drawing_no,
        sum(ifnull(number_install,0)) assembly_number
        from produce_track_assembly
        where tenant_id = #{param.tenantId} and branch_code = #{param.branchCode}
        <trim suffixOverrides=",">
            <if test="param.drawingNo != null and param.drawingNo != ''">
                and drawing_no like CONCAT('%',#{param.drawingNo},'%')
            </if>
        </trim>
        group by drawing_no
    </select>
</mapper>