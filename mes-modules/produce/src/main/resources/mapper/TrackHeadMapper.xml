<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.richfit.mes.produce.dao.TrackHeadMapper">
    <select id="selectTrackHeadRouter" resultType="com.richfit.mes.common.model.produce.TrackHead">
        SELECT *
        FROM mes_produce.produce_track_head
        WHERE id in (SELECT th.id
                     FROM mes_produce.produce_track_head th
                              left join produce_track_item ti on th.id = ti.track_head_id ${ew.customSqlSegment}
                     group by th.id)
    </select>

    <select id="selectTrackHeadCurrentRouter" resultType="com.richfit.mes.common.model.produce.TrackHead">
        SELECT th.*,
               ti.product_no item_product_no,
               ti.number     item_number,
               ti.opt_id,
               ti.opt_name,
               ti.id         ti_id,
               ti.sequence_order_by,
               ti.opt_no,
               ti.original_opt_sequence,
               ti.next_opt_sequence,
               ti.is_current
        FROM mes_produce.produce_track_head th
                 LEFT JOIN mes_produce.produce_track_item ti ON th.id = ti.track_head_id
            ${ew.customSqlSegment}
    </select>

    <select id="selectTrackHeadCurrentRouterNew" resultType="com.richfit.mes.common.model.produce.TrackHead">
        select   *   from (
        SELECT
                ROW_NUMBER() OVER (partition  BY ti.flow_id ORDER by ti.opt_sequence desc) AA,
               th.*,
               ti.product_no item_product_no,
               tf.product_no flow_product_no,
               ti.number     item_number,
               ti.opt_id,
               ti.opt_name,
               ti.id         ti_id,
               ti.sequence_order_by,
               ti.opt_no,
               ti.original_opt_sequence,
               ti.next_opt_sequence,
               ti.is_current
        FROM produce_track_head th
                 LEFT JOIN produce_track_head_flow tf ON tf.track_head_id = th.id
            AND tf.`status` = 1
                 LEFT JOIN produce_track_item ti ON th.id = ti.track_head_id
            AND ti.flow_id = tf.id
            AND ti.is_final_complete = 1
            ${ew.customSqlSegment}
        ) a
        where   a.AA=1
    </select>

    <select id="selectTrackHeadAndFlow" resultType="com.richfit.mes.common.model.produce.TrackHead">
        SELECT th.*, tf.product_no as final_product_no
        FROM mes_produce.produce_track_head th
                 LEFT JOIN mes_produce.produce_track_head_flow tf ON th.id = tf.track_head_id
            ${ew.customSqlSegment}
    </select>

    <select id="queryListByCertId" resultType="com.richfit.mes.common.model.produce.TrackHead">
        SELECT th.*,
               ti.opt_id,
               ti.opt_name,
               ti.id            ti_id,
               ti.sequence_order_by,
               ti.product_no as item_product_no,
               ti.number     as item_number
        FROM mes_produce.produce_track_certificate tc
                 left join mes_produce.produce_track_head th on tc.th_id = th.id
                 LEFT JOIN mes_produce.produce_track_item ti ON th.id = ti.track_head_id and ti.id = tc.ti_id
        where tc.certificate_id = #{certId}
    </select>
    <select id="selectAssemblyByTrackHeadIds" resultType="com.richfit.mes.common.model.produce.TrackAssembly">
        SELECT pta.*,pth.work_no work_no,pth.product_name product_name
        FROM produce_track_head pth JOIN produce_track_assembly pta
        ON pth.Id = pta.track_head_id and pth.tenant_id = '12345678901234567890123456789002' AND pth.classes = 2
        <if test="null != ids">
            and pth.id in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id,jdbcType=VARCHAR}
            </foreach>
        </if>
    </select>
    <select id="selectByIds" resultType="com.richfit.mes.common.model.produce.TrackHead">
        SELECT * from produce_track_head where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id,jdbcType=VARCHAR}
        </foreach>
    </select>
</mapper>
